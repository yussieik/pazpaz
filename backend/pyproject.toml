[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pazpaz"
version = "0.1.0"
description = "Lightweight practice management web app for independent therapists"
readme = "README.md"
requires-python = ">=3.13.5"
dependencies = [
    "fastapi[standard]>=0.115.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.30.0",
    "alembic>=1.13.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "python-multipart>=0.0.12",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "redis>=5.0.0",
    "httpx>=0.27.0",
    "psycopg[binary]>=3.2.10",
    "structlog>=25.4.0",
    "slowapi>=0.1.9",
    "boto3>=1.40.45",
    "prometheus-client>=0.23.1",
    "aiosmtplib>=4.0.2",
    "python-magic>=0.4.27",
    "pillow>=11.3.0",
    "pypdf>=6.1.1",
    "clamd>=1.0.2",
    "argon2-cffi>=25.1.0",
    "pyotp>=2.9.0",
    "qrcode>=8.2",
    "arq>=0.26.3",
    "google-api-python-client>=2.185.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.2",
    "certifi>=2025.8.3",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pazpaz"]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.7.0",
]

[dependency-groups]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-docker>=3.2.3",
    "pytest-httpx>=0.35.0",
    "pytest-xdist>=3.8.0",
    "respx>=0.22.0",
    "ruff>=0.7.0",
]


[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM"]
ignore = [
    "B008",  # Allow function calls in argument defaults (FastAPI Depends pattern)
    "B017",  # Test: pytest.raises(Exception) is intentional for broad exception testing
    "B018",  # Useless expression - some are intentional (e.g., pytest markers)
    "B904",  # Exception chaining - adding in future cleanup PR
    "E501",  # Line length - defer to formatter (fixing manually in future PR)
    "N803",  # Test mocks use AWS SDK naming conventions (Bucket, Key, SecretId)
    "SIM102",  # Nested if statements - defer to readability cleanup PR
    "SIM105",  # contextlib.suppress - defer to refactoring PR
    "SIM117",  # Nested with statements - defer to refactoring PR
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "performance: marks tests as performance tests (run with: pytest -m performance)",
    "no_db: marks tests that don't require database access (run with: pytest -m no_db)",
    "quarterly_drill: marks tests for quarterly disaster recovery drills (run with: pytest -m quarterly_drill)",
]
