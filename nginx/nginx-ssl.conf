# Production Nginx Configuration for PazPaz with SSL/TLS
# HIPAA-compliant reverse proxy with security hardening
# This is the main entry point for all traffic

# Run as nginx user (non-root)
user nginx;

# Worker processes - auto-detect based on CPU cores
worker_processes auto;

# PID file location (writable by nginx user)
pid /var/run/nginx.pid;

# Error log configuration
error_log /var/log/nginx/error.log warn;

# Worker connections and event model
events {
    worker_connections 1024;
    # use epoll;  # Linux-specific, comment out for macOS testing
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # =============================================================================
    # SECURITY SETTINGS
    # =============================================================================

    # Hide nginx version (security through obscurity)
    server_tokens off;

    # Prevent clickjacking attacks
    add_header X-Frame-Options "DENY" always;

    # Prevent MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Enable XSS protection (for older browsers)
    add_header X-XSS-Protection "1; mode=block" always;

    # Content Security Policy - strict default with Vue.js requirements
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' wss: ws:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # Referrer Policy for privacy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions Policy (restrict browser features)
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

    # =============================================================================
    # LOGGING
    # =============================================================================

    # Enhanced log format with timing information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'request_id=$request_id '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'gzip_ratio=$gzip_ratio';

    access_log /var/log/nginx/access.log main buffer=32k flush=5s;

    # =============================================================================
    # PERFORMANCE OPTIMIZATION
    # =============================================================================

    # Sendfile and TCP optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Keepalive settings
    keepalive_timeout 65;
    keepalive_requests 100;

    # Hash tables
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;

    # File descriptor cache
    open_file_cache max=2000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # =============================================================================
    # GZIP COMPRESSION
    # =============================================================================

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        text/x-cross-domain-policy
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        application/atom+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-font-opentype
        application/x-font-woff
        application/wasm
        image/svg+xml
        image/x-icon
        font/opentype;

    # =============================================================================
    # BUFFER SIZES (Protection against buffer overflow attacks)
    # =============================================================================

    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # Maximum request body size (100MB for file attachments)
    client_max_body_size 100m;

    # Timeouts to prevent slowloris attacks
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Proxy buffer sizes
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # =============================================================================
    # RATE LIMITING ZONES
    # =============================================================================

    # General API rate limiting (10 requests per second)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Authentication endpoints rate limiting (5 requests per minute - stricter)
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

    # Static files rate limiting (100 requests per second)
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # WebSocket connection limiting (5 connections per second)
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;

    # Connection limiting per IP
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Rate limit status codes
    limit_req_status 429;
    limit_conn_status 429;

    # =============================================================================
    # UPSTREAM DEFINITIONS
    # =============================================================================

    # Backend API upstream
    upstream backend_api {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Frontend upstream
    upstream frontend_app {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # =============================================================================
    # SSL CONFIGURATION (HIPAA-compliant TLS settings)
    # =============================================================================

    # SSL session cache and tickets
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Modern SSL/TLS configuration (HIPAA requires TLS 1.2+)
    ssl_protocols TLSv1.2 TLSv1.3;

    # Strong cipher suites only (prefer modern ciphers)
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Prefer server cipher order
    ssl_prefer_server_ciphers off;

    # OCSP stapling configuration
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
    resolver_timeout 5s;

    # =============================================================================
    # HTTP SERVER (Port 80 - Redirects to HTTPS)
    # =============================================================================

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Access and error logs
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # =============================================================================
        # ACME Challenge (Let's Encrypt certificate validation)
        # =============================================================================

        location /.well-known/acme-challenge/ {
            root /var/www/acme-challenge;
            try_files $uri =404;
        }

        # =============================================================================
        # HTTPS Redirect (301 Permanent)
        # =============================================================================

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # =============================================================================
    # HTTPS SERVER (Port 443 - Main application server)
    # =============================================================================

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        # Server name - replace with your actual domain
        # This will be replaced by environment variable or configuration
        server_name ${DOMAIN_NAME};

        # =============================================================================
        # SSL Certificate Configuration
        # =============================================================================

        # Certificate paths (Let's Encrypt) - replace ${DOMAIN_NAME} with your domain
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem;

        # Diffie-Hellman parameters for DHE ciphersuites
        ssl_dhparam /etc/nginx/dhparam.pem;

        # =============================================================================
        # Security Headers (HTTPS-specific)
        # =============================================================================

        # Strict Transport Security (HSTS) - enforce HTTPS for 1 year
        # includeSubDomains ensures all subdomains use HTTPS
        # preload allows inclusion in browser HSTS preload lists
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Expect-CT header for Certificate Transparency
        add_header Expect-CT "max-age=86400, enforce" always;

        # Access and error logs
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Connection limiting (10 concurrent connections per IP)
        limit_conn addr 10;

        # =============================================================================
        # Health Check Endpoint
        # =============================================================================

        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # =============================================================================
        # API Proxy (/api/*)
        # =============================================================================

        location /api {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;

            # Special handling for auth endpoints with stricter rate limiting
            location ~* /api/v1/auth/(login|register|verify|magic-link) {
                limit_req zone=auth burst=2 nodelay;

                proxy_pass http://backend_api;
                proxy_http_version 1.1;

                # Proxy headers
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Request-ID $request_id;

                # Timeouts
                proxy_connect_timeout 10s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;

                # Security headers
                proxy_hide_header X-Powered-By;
                proxy_hide_header Server;
            }

            # Regular API endpoints
            proxy_pass http://backend_api;
            proxy_http_version 1.1;

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Connection settings
            proxy_set_header Connection "";

            # Timeouts (60s for long-running requests)
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Security headers
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;

            # Handle large request bodies (file uploads)
            client_max_body_size 100m;
            client_body_buffer_size 1m;
        }

        # =============================================================================
        # WebSocket Proxy (/ws/*)
        # =============================================================================

        location /ws {
            # Rate limiting for WebSocket connections
            limit_req zone=websocket burst=5 nodelay;

            # Proxy to backend WebSocket
            proxy_pass http://backend_api;
            proxy_http_version 1.1;

            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Longer timeout for WebSocket connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 10s;

            # Disable buffering for WebSocket
            proxy_buffering off;

            # Security
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # =============================================================================
        # Static Files and Frontend
        # =============================================================================

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            # Rate limiting for static files
            limit_req zone=static burst=50 nodelay;

            # Proxy to frontend
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache control
            expires 1y;
            add_header Cache-Control "public, immutable";

            # Security headers for static assets
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;

            # Access log off for static assets
            access_log off;
        }

        # Frontend application (Vue.js SPA)
        location / {
            # Rate limiting for general requests
            limit_req zone=api burst=20 nodelay;

            # Proxy to frontend
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Security
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # =============================================================================
        # Security: Block access to sensitive files
        # =============================================================================

        # Block access to hidden files (except .well-known)
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to backup and sensitive files
        location ~* \.(log|bak|sql|old|orig|original|backup|swp|save)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to version control directories
        location ~ /\.(git|svn|hg|bzr) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # =============================================================================
        # Custom Error Pages
        # =============================================================================

        error_page 400 /errors/400.html;
        error_page 401 /errors/401.html;
        error_page 403 /errors/403.html;
        error_page 404 /errors/404.html;
        error_page 429 /errors/429.html;
        error_page 500 502 503 504 /errors/50x.html;

        location ^~ /errors/ {
            internal;
            root /usr/share/nginx/html;
        }
    }
}