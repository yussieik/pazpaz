# Nginx configuration for PazPaz Frontend (Production with Docker Compose)
# HIPAA-compliant with security headers and performance optimizations

# Run as nginx user (non-root)
user nginx;

# Worker processes - auto-detect based on CPU cores
worker_processes auto;

# Error log configuration
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

# Worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security: Hide nginx version
    server_tokens off;

    # Logging format with request ID for tracing
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance: Sendfile and TCP optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Keepalive for better connection reuse
    keepalive_timeout 65;
    keepalive_requests 100;

    # Gzip compression for text-based assets
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/x-js
        text/x-cross-domain-policy
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/x-icon
        application/wasm;
    gzip_disable "msie6";

    # Security: Client body size limits (10MB for file uploads)
    client_body_buffer_size 16k;
    client_max_body_size 10m;
    client_body_timeout 30s;
    client_header_timeout 30s;

    # Rate limiting zones (protect against brute force and DoS)
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Cache configuration for static assets
    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=static_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name _;

        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # Security headers - HIPAA compliant
        # Content Security Policy - Strict but allowing Vue.js requirements
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' wss://localhost:* ws://localhost:*; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;

        # Strict Transport Security (HSTS) - enforce HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Prevent clickjacking
        add_header X-Frame-Options "DENY" always;

        # Prevent MIME type sniffing
        add_header X-Content-Type-Options "nosniff" always;

        # XSS Protection (legacy browsers)
        add_header X-XSS-Protection "1; mode=block" always;

        # Referrer Policy - privacy-focused
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Permissions Policy (formerly Feature Policy)
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

        # Connection limiting
        limit_conn addr 10;

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # API proxy configuration (reverse proxy to backend)
        location /api {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;

            # Proxy to backend service in Docker Compose network
            proxy_pass http://api:8000;
            proxy_http_version 1.1;

            # Headers for proper proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for backend communication
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Disable buffering for streaming responses
            proxy_buffering off;

            # Security: Don't pass client headers that might be dangerous
            proxy_set_header Accept-Encoding "";
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # WebSocket proxy configuration
        location /ws {
            # Rate limiting for WebSocket connections
            limit_req zone=api burst=10 nodelay;

            # Proxy to backend WebSocket
            proxy_pass http://api:8000;
            proxy_http_version 1.1;

            # WebSocket specific headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeout for WebSocket connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            # Rate limiting for static assets
            limit_req zone=static burst=50 nodelay;

            # Cache control for static assets
            expires 1y;
            add_header Cache-Control "public, immutable";

            # Security headers (repeated for static assets)
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;

            # Enable gzip for static files
            gzip_static on;

            # Don't log access to static assets
            access_log off;
        }

        # Vue Router - SPA fallback
        # This must come last to catch all routes
        location / {
            # Rate limiting for general requests
            limit_req zone=general burst=20 nodelay;

            # Try files in order: exact match, directory, fallback to index.html
            try_files $uri $uri/ /index.html;

            # Cache control for HTML (no cache to ensure updates are fetched)
            location = /index.html {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";

                # Ensure security headers are present on index.html
                add_header X-Content-Type-Options "nosniff" always;
                add_header X-Frame-Options "DENY" always;
                add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' wss://localhost:* ws://localhost:*; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
            }
        }

        # Security: Deny access to hidden files (except .well-known for Let's Encrypt)
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Deny access to sensitive files
        location ~* \.(log|bak|sql|old|orig|original|backup)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}